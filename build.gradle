subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    group = 'io.advantageous.qbit'
    version = '1.0.0-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

project(':qbit-core') {

    apply plugin: 'signing'

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.10'
        testCompile project(':qbit-boon')
        compile "org.slf4j:slf4j-api:[1.7,1.8)"
        testCompile "org.slf4j:slf4j-simple:[1.7,1.8)"

    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required false
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    try {
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    } catch (MissingPropertyException ignore) {
                    }
                }

                pom.project {
                    name 'qbit'
                    packaging 'jar'
                    description 'Go Channels inspired Java lib'
                    url 'https://github.com/RichardHightower/qbit'

                    scm {
                        url 'scm:git@github.com:RichardHightower/qbit.git'
                        connection 'scm:git@github.com:RichardHightower/qbit.git'
                        developerConnection 'scm:git@github.com:RichardHightower/qbit.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'richardHightower'
                            name 'Richard Hightower'
                        }
                        developer {
                            id 'sailorgeoffrey'
                            name 'Geoffrey Chandler'
                        }
                    }
                }
            }
        }
    }
}

project(':qbit-boon') {
    sourceSets.main.resources.srcDir 'src/main/java'
    dependencies {
        compile project(':qbit-core')
        compile group: 'io.fastjson', name: 'boon', version: '0.30-SNAPSHOT'
        testCompile 'junit:junit:4.11'
        testCompile "org.slf4j:slf4j-simple:[1.7,1.8)"

    }
}


project(':examples') {
    sourceSets.main.resources.srcDir 'src/main/java'
    dependencies {
        compile project(':qbit-boon')
        testCompile 'junit:junit:4.11'
        testCompile "org.slf4j:slf4j-simple:[1.7,1.8)"
    }
}

project(':qbit-vertx') {

    apply plugin: 'java'
    apply plugin: 'signing'



    group = 'io.advantageous.qbit'
    version = '1.0.0-SNAPSHOT'

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required false
        sign configurations.archives
    }

    jar {
        manifest {
            attributes 'Main-Class': 'io.rd.cognizance.example.SampleService'
        }
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    sourceSets.main.resources.srcDir 'src/main/java'
    dependencies {
        compile project(':qbit-core')
        compile project(':qbit-boon')
        compile group: 'io.vertx', name: 'vertx-core', version: vertxVersion
        compile group: 'io.vertx', name: 'vertx-platform', version: vertxVersion
        compile group: 'io.vertx', name: 'lang-groovy', version: vertxVersion
        testCompile 'junit:junit:4.11'
    }


    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    try {
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    } catch (MissingPropertyException ignore) {
                    }
                }

                pom.project {
                    name 'qbit'
                    packaging 'jar'
                    description 'Go Channels inspired Java lib'
                    url 'https://github.com/RichardHightower/qbit'

                    scm {
                        url 'scm:git@github.com:RichardHightower/qbit.git'
                        connection 'scm:git@github.com:RichardHightower/qbit.git'
                        developerConnection 'scm:git@github.com:RichardHightower/qbit.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'richardHightower'
                            name 'Richard Hightower'
                        }
                        developer {
                            id 'sailorgeoffrey'
                            name 'Geoffrey Chandler'
                        }
                    }
                }
            }
        }

    }
}
