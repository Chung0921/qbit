<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2014-11-20T03:30:07" hostname="gcc-home.local" time="0.009">
  <properties/>
  <testcase name="test" classname="io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest" time="0.006"/>
  <testcase name="testTwoBasicArgs" classname="io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest" time="0.001"/>
  <testcase name="testTwoBasicArgsInURIParams" classname="io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest" time="0.0"/>
  <testcase name="someMethod2" classname="io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest" time="0.0"/>
  <testcase name="someMethod3" classname="io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest" time="0.001"/>
  <testcase name="someMethod4" classname="io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest" time="0.0"/>
  <system-out><![CDATA[[/boo/baz/FOO, /boo/baz/GEOFF, /boo/baz/SOMEMETHOD, /boo/baz/SOMEMETHOD2, /boo/baz/SOMEMETHOD3, /boo/baz/baaah/pluck, /boo/baz/foo, /boo/baz/geoff, /boo/baz/geoff/chandles/, /boo/baz/geoff/chandles/twoargs/, /boo/baz/someMethod, /boo/baz/someMethod2, /boo/baz/someMethod3, /boo/baz/somemethod, /boo/baz/somemethod2, /boo/baz/somemethod3] 
/boo/baz/someMethod3 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod3', address='/boo/baz/someMethod3', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod3(), annotationData=[], instance=null} 
/boo/baz/somemethod3 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod3', address='/boo/baz/somemethod3', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod3(), annotationData=[], instance=null} 
/boo/baz/SOMEMETHOD3 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod3', address='/boo/baz/SOMEMETHOD3', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod3(), annotationData=[], instance=null} 
/boo/baz/someMethod2 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod2', address='/boo/baz/someMethod2', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod2(java.lang.String,int), annotationData=[], instance=null} 
/boo/baz/somemethod2 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod2', address='/boo/baz/somemethod2', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod2(java.lang.String,int), annotationData=[], instance=null} 
/boo/baz/SOMEMETHOD2 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod2', address='/boo/baz/SOMEMETHOD2', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod2(java.lang.String,int), annotationData=[], instance=null} 
/boo/baz/baaah/pluck 
BINDING MethodBinding{hasURIParams=false, methodName='foo', address='/boo/baz/baaah/pluck', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.foo(), annotationData=[requestMapping], instance=null} 
/boo/baz/foo 
BINDING MethodBinding{hasURIParams=false, methodName='foo', address='/boo/baz/foo', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.foo(), annotationData=[requestMapping], instance=null} 
/boo/baz/FOO 
BINDING MethodBinding{hasURIParams=false, methodName='foo', address='/boo/baz/FOO', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.foo(), annotationData=[requestMapping], instance=null} 
/boo/baz/geoff/chandles/twoargs/ 
BINDING MethodBinding{hasURIParams=true, methodName='geoff', address='/boo/baz/geoff/chandles/twoargs/', parameters=[ArgParamBinding{methodParamPosition=0, uriPosition=6, methodParamName=''}, ArgParamBinding{methodParamPosition=1, uriPosition=7, methodParamName=''}]} 
PARAMS [ArgParamBinding{methodParamPosition=0, uriPosition=6, methodParamName=''}, ArgParamBinding{methodParamPosition=1, uriPosition=7, methodParamName=''}] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.geoff(java.lang.String,int), annotationData=[requestMapping], instance=null} 
/boo/baz/geoff 
BINDING MethodBinding{hasURIParams=false, methodName='geoff', address='/boo/baz/geoff', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.geoff(java.lang.String,int), annotationData=[requestMapping], instance=null} 
/boo/baz/GEOFF 
BINDING MethodBinding{hasURIParams=false, methodName='geoff', address='/boo/baz/GEOFF', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.geoff(java.lang.String,int), annotationData=[requestMapping], instance=null} 
/boo/baz/geoff/chandles/ 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod', address='/boo/baz/geoff/chandles/', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod(java.lang.String,int), annotationData=[requestMapping], instance=null} 
/boo/baz/someMethod 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod', address='/boo/baz/someMethod', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod(java.lang.String,int), annotationData=[requestMapping], instance=null} 
/boo/baz/somemethod 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod', address='/boo/baz/somemethod', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod(java.lang.String,int), annotationData=[requestMapping], instance=null} 
/boo/baz/SOMEMETHOD 
BINDING MethodBinding{hasURIParams=false, methodName='someMethod', address='/boo/baz/SOMEMETHOD', parameters=[]} 
PARAMS [] 
METHOD MethodAccessImpl{method=public void io.advantageous.qbit.service.impl.BoonServiceMethodCallHandlerTest$Foo.someMethod(java.lang.String,int), annotationData=[requestMapping], instance=null} 
foo 
geoff 
geoff a 5 b 11 
geoff 1 99 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
